
package consultas;

import static com.sun.xml.internal.ws.spi.db.BindingContextFactory.LOGGER;
import telas.*;
import dao.UsuarioDao_efb;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import javax.swing.JOptionPane;
import tools.Util;

public class JDlgConsultaUsuario extends javax.swing.JDialog {

    /**
     * Creates new form JDlgPesquisaCliente
     */
    Util util;
    ConsultaUsuario_efb pesquisarUsuario;
    UsuarioDao_efb usuarioDao;
    List lista;

    public JDlgConsultaUsuario(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Consultar Usuario");

        pesquisarUsuario = new ConsultaUsuario_efb();
        usuarioDao = new UsuarioDao_efb();
        lista=new ArrayList();
        lista = usuarioDao.listAll();
        pesquisarUsuario.setList(lista);
        jTable1.setModel(pesquisarUsuario);
    }

   /* public void setTelaAnterior(JDlgUsuarios jDlgUsuarios) {
        this.jDlgUsuarios = jDlgUsuarios;
    }
*/
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jBtnOk_efb = new javax.swing.JButton();
        jBtnCancelar_efb1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTxtNome_Efb = new javax.swing.JTextField();
        jBtnPesquisar_efb = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jChkAtivo_Efb = new javax.swing.JCheckBox();
        jCmbNivel_efb = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jBtnOk_efb.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/confirmar.png"))); // NOI18N
        jBtnOk_efb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnOk_efbActionPerformed(evt);
            }
        });

        jBtnCancelar_efb1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/sair.png"))); // NOI18N
        jBtnCancelar_efb1.setText("Cancelar");
        jBtnCancelar_efb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCancelar_efb1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Nivel:");

        jBtnPesquisar_efb.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pesquisa-global.png"))); // NOI18N
        jBtnPesquisar_efb.setText("Pesquisar");
        jBtnPesquisar_efb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnPesquisar_efbActionPerformed(evt);
            }
        });

        jLabel2.setText("Nome:");

        jChkAtivo_Efb.setText("Ativo");

        jCmbNivel_efb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrador", "Visitante", "Vendedor", "Comun", "" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 493, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jBtnOk_efb)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBtnCancelar_efb1)
                        .addGap(20, 20, 20))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel1)
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTxtNome_Efb)
                    .addComponent(jCmbNivel_efb, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jChkAtivo_Efb)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtnPesquisar_efb)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTxtNome_Efb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jChkAtivo_Efb))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCmbNivel_efb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtnPesquisar_efb)
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnCancelar_efb1)
                    .addComponent(jBtnOk_efb))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnOk_efbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnOk_efbActionPerformed
        // TODO add your handling code here:
        if (jTable1.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Selecione uma linha!");
        }

        setVisible(false);
    }//GEN-LAST:event_jBtnOk_efbActionPerformed

    private void jBtnCancelar_efb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCancelar_efb1ActionPerformed
        // TODO add your handling code here:
        if (util.pergunta("Deseja Cancelar ?")) {
            setVisible(false);
        } else {
            util.mensagem("Selecione uma linha");
        }
    }//GEN-LAST:event_jBtnCancelar_efb1ActionPerformed

    private void jBtnPesquisar_efbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnPesquisar_efbActionPerformed
        // TODO add your handling code here:
        usuarioDao = new UsuarioDao_efb();
        String ativoValue = jChkAtivo_Efb.isSelected() ? "Sim" : "Não";

        if (jTxtNome_Efb.getText().equals("") && !jCmbNivel_efb.getSelectedItem().equals("") && !jChkAtivo_Efb.isSelected()) {
            // Se somente o campo de Nível estiver selecionado
            LOGGER.log(Level.INFO, "Pesquisando por Nível: " + jCmbNivel_efb.getSelectedItem());
            lista = usuarioDao.listPorNivel((String) jCmbNivel_efb.getSelectedItem());
            pesquisarUsuario.setList(lista);
        } else if (!jTxtNome_Efb.getText().equals("") && jCmbNivel_efb.getSelectedItem().equals("") && !jChkAtivo_Efb.isSelected()) {
            // Se somente o campo de Nome estiver preenchido
            LOGGER.log(Level.INFO, "Pesquisando por Nome: " + jTxtNome_Efb.getText());
            lista = usuarioDao.listPorNome(jTxtNome_Efb.getText());
            pesquisarUsuario.setList(lista);
        } else if (jTxtNome_Efb.getText().equals("") && jCmbNivel_efb.getSelectedItem().equals("") && !jChkAtivo_Efb.isSelected()) {
            // Se tudo estiver vazio
            LOGGER.log(Level.INFO, "Pesquisando tudo em usuario: ");
            lista = usuarioDao.listAll();
            pesquisarUsuario.setList(lista);
        } else if (!jTxtNome_Efb.getText().equals("") && !jCmbNivel_efb.getSelectedItem().equals("") && !jChkAtivo_Efb.isSelected()) {
            // Se os campos de Nome e Nível estiverem preenchidos
            LOGGER.log(Level.INFO, "Pesquisando por Nome: " + jTxtNome_Efb.getText() + ", Nível: " + jCmbNivel_efb.getSelectedItem());
            lista = usuarioDao.listPorNomeENivel(jTxtNome_Efb.getText(), (String) jCmbNivel_efb.getSelectedItem());
            pesquisarUsuario.setList(lista);
        } else if (jTxtNome_Efb.getText().equals("") && jCmbNivel_efb.getSelectedItem().equals("") && jChkAtivo_Efb.isSelected()) {
            // Se somente o campo de Ativo estiver selecionado
            LOGGER.log(Level.INFO, "Pesquisando por Ativo: " + ativoValue);
            lista = usuarioDao.listPorAtivo(ativoValue);
            pesquisarUsuario.setList(lista);
        } else if (jTxtNome_Efb.getText().equals("") && !jCmbNivel_efb.getSelectedItem().equals("") && jChkAtivo_Efb.isSelected()) {
            // Se os campos de Nível e Ativo estiverem selecionados
            LOGGER.log(Level.INFO, "Pesquisando por Nível: " + jCmbNivel_efb.getSelectedItem() + ", Ativo: " + ativoValue);
            lista = usuarioDao.listPorAtivoENivel(ativoValue, (String) jCmbNivel_efb.getSelectedItem());
            pesquisarUsuario.setList(lista);
        } else if (!jTxtNome_Efb.getText().equals("") && jCmbNivel_efb.getSelectedItem().equals("") && jChkAtivo_Efb.isSelected()) {
            // Se os campos de Nome e Ativo estiverem preenchidos
            LOGGER.log(Level.INFO, "Pesquisando por Nome: " + jTxtNome_Efb.getText() + ", Ativo: " + ativoValue);
            lista = usuarioDao.listPorNomeEAtivo(jTxtNome_Efb.getText(), ativoValue);
            pesquisarUsuario.setList(lista);
        } else if (!jTxtNome_Efb.getText().equals("") && !jCmbNivel_efb.getSelectedItem().equals("") && jChkAtivo_Efb.isSelected()) {
            // Se todos os campos de Nome, Nível e Ativo estiverem preenchidos
            LOGGER.log(Level.INFO, "Pesquisando por Nome: " + jTxtNome_Efb.getText() + ", Nível: " + jCmbNivel_efb.getSelectedItem() + ", Ativo: " + ativoValue);
            lista = usuarioDao.listPorNomeAtivoENivel(jTxtNome_Efb.getText(), ativoValue, (String) jCmbNivel_efb.getSelectedItem());
            pesquisarUsuario.setList(lista);
        } else {
            // Caso nenhum critério seja selecionado
            LOGGER.log(Level.WARNING, "Nenhum critério de pesquisa correspondente encontrado.");
        }

    }//GEN-LAST:event_jBtnPesquisar_efbActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JDlgConsultaUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JDlgConsultaUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JDlgConsultaUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JDlgConsultaUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDlgConsultaUsuario dialog = new JDlgConsultaUsuario(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnCancelar_efb1;
    private javax.swing.JButton jBtnOk_efb;
    private javax.swing.JButton jBtnPesquisar_efb;
    private javax.swing.JCheckBox jChkAtivo_Efb;
    private javax.swing.JComboBox<String> jCmbNivel_efb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTxtNome_Efb;
    // End of variables declaration//GEN-END:variables
}
